---------------
1.  WHAT's NEW
---------------
A list of changes in recent versions:

1.2.0:
       * [BUG] PRD-2578: Computing relative paths was still wrong.

       * [BUG] PRD-2556: A NPE occured during booting when a dependency was
         not found.

       * [BUG] PRD-2555: Localization used LibBase's classloader for loading
         resource bundles but must use the classloader of the caller instead.

       * [BUG] PRD-2666: A optional mnemonic must return zero instead of null
         as the AWT does not handle NULL values correctly.

       * Added support classes to crypt passwords either with a weak
         encoding or a strong AES password based encryption

1.1.6:
       * [BUG] PRD-2611: CSVTokenizer trimmed text before parsing and thus
         lost leading and trailing spaces

1.1.5:
       * [BUG] Prevented a starving WaitingImageObserver on errors during
         asynchronous loading of images. The AWT does not handle unexpected
         errors very well here.

       * PRD-2473: Added a safe method to handle BLOBs. Also improved the memory
         footprint when reading CLOBs and BLOBs by tuning the MemoryStringWriter
         and MemoryByteArrayOutputStream.

       * [BUG] PRD-2530: PNGs created via the ImageEncoder interface were
         always generated as uncompressed PNGs resulting in overly large files.

       * Added general method for handling CLOBs to IOUtils.

1.1.4: (2009-11-13)
       * ResourceBundleSupport#getString(..) no longer crashes on missing resources.

       * [API] ObjectUtilities#parseVersion and ObjectUtilities#compareVersionsArray
         are public now

1.1.3: (2009-11-13)
1.1.2: (2009-09-25)
       * ResourceBundleSupport: Menu creation no longer requires a mandatory mnemonic.

1.1.1: (2009-08-21)
       * [API] Allow to change the message on a StackableException so that it can
         be reused more easily.

       * VersionHelper now looks for Implementation-ProductID instead of
         Implementation-Title. The Implementation-Title can change easily.

       * [BUG] PRE-512: IOUtils#createRelativePath was wrong

1.1.0: (2009-07-29)

       * [BUG] Booting with unconfigured modules must not result in hard failures

       * [BUG] PRE-411: IOUtils#getFileName must not return names with a leading
         slash

       * [BUG] ObjectUtilities#clone failed for arrays

       * [BUG] IOUtils#getFileName() must not return query parameters.

       * [BUG] LinkedMap ended in an inconsistent state after remove was called.

       * [BUG] IOUtils#getExtension() must handle forward and backward slashes

       * LibBase uses Ivy now.

       * Various minor performance improvements in LinkedMap and LFUMap.

       * Replaced all calls to ClassLoader.loadClass with Class.forName so that we
         do not initialize the loaded classes during the loading. The classes will
         be initialized safely before the first instance is created.

       * Added BulkData-handling code so that array operations are unified.

       * Added ImageEncoder interface so that Pentaho Reporting can access all
         available encoders in a uniform way.

       * JUnit tests now run in headless mode, so that Hudson is no longer upset.

       * [API] Added a special ObjectUtilities#equals for files, as the default for
         java.io.File does not compare on a filesystem level.

       * ResourceBundleSupport now has better KeyStroke support. Use "menu" for a
         platform independent way to specify keystrokes.

1.0.0: (30-May-2008)

       * [BUG] Serialized configurations did not reconnect with a global
         configuration.

       * [BUG] Booting no longer stores references to all booted classes
         in a global collection.

       * [BUG] Fixed a deadlock when booting failed and a second boot attempt
         was made.

       * Downported I18N support from the engine.

       * Imported the majority of the sources from the stale JCommon project.

       * Switched logging to Apache-Commons-Logging.

       * Added a ClassQueryTool that (given enough perm-gen space) travereses
         through all classes on the classpath and can return the names of all
         classes matching a given criteria.

         It is not recommended to use this class at runtime; but it is a great
         tool for build-time generators for configuration files.

       * CSV-Reader and Writer support added.

       * StringUtils now contain a equivalent for the split method, but without
         relying on the expensive regular expressions. The StringTokenizer is
         a lot faster.

       * The module-configuration no longer relies on a home-grown fileformat
         and uses standard properties-files for describing modules and dependencies.

       * This code is a fork based on JCommon-1.0.12. JCommon is about to be
         deprecated and development on the JCommon library will stop as
         JFreeChart 1.2 is released.
